{"version":3,"sources":["components/Note.js","components/App.js","index.js"],"names":["Note","className","this","props","note","text","Component","App","state","notes","setState","read_cookie","push","bake_cookie","delete_cookie","Form","inline","FormControl","onChange","event","target","value","Button","onClick","submit","map","index","key","clear","ReactDOM","render","document","getElementById"],"mappings":"6RAYeA,E,iLARX,OACE,yBAAKC,UAAU,QACb,8BAAOC,KAAKC,MAAMC,KAAKC,W,GAJZC,a,QC0DJC,E,YApDb,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXH,KAAM,GACNI,MAAO,IALG,E,iFAUZP,KAAKQ,SAAS,CAAED,MAAOE,sBAbR,a,+BAgBP,IAAD,EACiBT,KAAKM,MAArBC,EADD,EACCA,MAAOJ,EADR,EACQA,KAEfI,EAAMG,KAAK,CAAEP,SAEbH,KAAKQ,SAAS,CAAED,UAEhBI,sBAvBe,QAuBSX,KAAKM,MAAMC,S,8BAInCK,wBA3Be,SA6BfZ,KAAKQ,SAAS,CAAED,MAAO,O,+BAGf,IAAD,OACP,OACE,6BACE,gEACE,kBAACM,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACC,EAAA,EAAD,CAAaC,SAAU,SAAAC,GAAK,OAAI,EAAKT,SAAS,CAAEL,KAAMc,EAAMC,OAAOC,WAClE,IACD,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKC,WAA5B,aAGAtB,KAAKM,MAAMC,MAAMgB,KAAI,SAACrB,EAAMsB,GAC1B,OACE,kBAAC,EAAD,CAAMC,IAAKD,EAAOtB,KAAMA,OAI9B,6BACA,kBAACkB,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKK,UAA5B,oB,GA/CQtB,a,MCFlBuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cb719257.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Note extends Component {\n  render() {\n    return (\n      <div className=\"note\">\n        <span>{this.props.note.text}</span>\n      </div>\n    )\n  }\n}\n\nexport default Note;","import React, { Component } from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap';\nimport Note from './Note';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\n\nconst cookie_key = 'NOTES';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      text: '',\n      notes: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ notes: read_cookie(cookie_key) });\n  }\n\n  submit() {\n    const { notes, text } = this.state;\n\n    notes.push({ text });\n\n    this.setState({ notes });\n\n    bake_cookie(cookie_key, this.state.notes);\n  }\n\n  clear() {\n    delete_cookie(cookie_key);\n\n    this.setState({ notes: [] });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>My Ephemeral Local Storage Notes</h2>\n          <Form inline>\n            <FormControl onChange={event => this.setState({ text: event.target.value })} /> \n            {' '}\n            <Button onClick={() => this.submit()}>Add note</Button>\n          </Form>\n          {\n            this.state.notes.map((note, index) => {\n              return (\n                <Note key={index} note={note} / >\n              )\n            })\n          }\n          <hr/>\n          <Button onClick={() => this.clear()}>Clear Notes</Button>\n      </div>\n    )\n  }\n}\n\nexport default App; // import this without {} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}